schema: '2.0'
stages:
  predict_survival_time:
    cmd: python predict_with_best.py  --data data/merged.csv  --config_file afr.yaml  --model
      weibull  --target adv_failures  --duration_col adv_fit_time  --output data/merged_afr.csv
    deps:
    - path: afr.yaml
      md5: de63055dabfb50ee425757578eb84fdf
      size: 6091
    - path: data/merged.csv
      md5: 5c836e0b9ecaab7e81824684ceb44a9e
      size: 11799827
    - path: predict_with_best.py
      md5: 53a2d376e0acbbd4ddc6d70edc800869
      size: 2757
    outs:
    - path: data/merged_afr.csv
      hash: md5
      md5: 5f629c84ef9c590f4c12c2710828a2f4
      size: 12841386
  plot:
    cmd: python -m deckard.layers.plots --path plots/ --file data/merged_afr.csv -c
      plots.yaml
    deps:
    - path: data/merged_afr.csv
      hash: md5
      md5: 5f629c84ef9c590f4c12c2710828a2f4
      size: 12841386
    - path: plots.yaml
      md5: 07075fb24a3646dcc31e7dde7c34d14f
      size: 3806
    params:
      afr.yaml:
        covariates:
        - adv_fit_time
        - accuracy
        - train_time
        - atk_value
        - def_value
        - data.sample.random_state
        - Epochs
        - model_layers
        - id
        - atk_gen
        - def_gen
        - adv_failures
        - adv_accuracy
        - predict_time
        weibull:
          plot:
            file: weibull_aft.pdf
            title: Weibull AFT Model
            qq_title: Weibull QQ Plot
          t0: 0.3
          model:
            penalizer: 0.1
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'model_layers: lambda_': Layers
            'train_time: lambda_': $T_{train}$
            'predict_time: lambda_': $T_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time: lambda_': $T_{attack}$
            'adv_failure_rate: lambda_': $f_{adv.}(t;\theta)$
            'failure_rate: lambda_': $f_{ben.}(t;\theta)$
            'Epochs: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
            'def_value: lambda_': Defence Strength
            ': lambda_': ''
      plots.yaml:
        cat_plot:
        - file: adv_accuracy_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: linear
          x: def_gen
          xlabels: Defence Type
          y: adv_accuracy
          ylabels: Adv. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
          legend_title:
        - file: ben_accuracy_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          x: def_gen
          xlabels: Defence Type
          y: accuracy
          ylabels: Ben. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
          legend_title:
        - file: trash_score_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: log
          x: def_gen
          xlabels: Defence Type
          y: c_adv
          ylabels: $\bar{C}_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
          legend_title:
        - file: trash_score_vs_attack_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: log
          x: atk_gen
          xlabels: Attack Type
          y: c_adv
          ylabels: $\bar{C}_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
          legend_title: Model
        - file: adv_accuracy_vs_attack_type.pdf
          hue: model_name
          kind: boxen
          x: atk_gen
          xlabels: Attack Type
          y: adv_accuracy
          ylabels: Adv. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
          legend_title: Model
        line_plot:
        - file: def_param_vs_accuracy.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: Ben. Accuracy vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: accuracy
          y_scale:
          ylabel: Ben. Accuracy
          hue_order:
          - Control
          - Conf
          - Gauss-in
          - Gauss-out
          - FSQ
          errorbar: se
          err_style: bars
        - file: def_param_vs_adv_accuracy.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: Adv. Accuracy vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: adv_accuracy
          y_scale:
          ylabel: Adv. Accuracy
          hue_order:
          - Control
          - Conf
          - Gauss-in
          - Gauss-out
          - FSQ
          errorbar: se
          err_style: bars
        - file: def_param_vs_adv_failure_rate.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: $f_{adv}$ vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: adv_failure_rate
          y_scale: linear
          ylabel: $f_{adv.}$
          hue_order:
          - Control
          - Conf
          - Gauss-in
          - Gauss-out
          - FSQ
          errorbar: se
          err_style: bars
        - file: atk_param_vs_accuracy.pdf
          hue: atk_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
          title: Adv. Accuracy vs Attack Strength
          x: atk_value
          x_scale: linear
          xlabel: Attack Control Parameter
          y: adv_accuracy
          y_scale:
          ylabel: Adv. Accuracy
          hue_order:
          - FGM
          - PGD
          - Deep
          - HSJ
          - Pixel
          - Thresh
          errorbar: se
          err_style: bars
        scatter_plot:
        - x: train_time_per_sample
          y: adv_failure_rate
          hue: model_name
          xlabel: $t_{train}$
          ylabel: $f_{adv}$
          title: $f_{adv}$ vs $t_{train}$
          file: adv_failure_rate_vs_train_time.pdf
          x_scale: log
          legend:
            title: Model Name
            bbox_to_anchor:
            - 1.05
            - 1
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
    outs:
    - path: plots/adv_accuracy_vs_attack_type.pdf
      hash: md5
      md5: 8388553b2556364cd1f6d2a9b523e967
      size: 36004
    - path: plots/adv_accuracy_vs_defence_type.pdf
      hash: md5
      md5: c860e7ad6ffc66139d149c8b7467175b
      size: 30891
    - path: plots/adv_failure_rate_vs_train_time.pdf
      hash: md5
      md5: f5512c4f831e058e756fd884a48ecaca
      size: 391083
    - path: plots/atk_param_vs_accuracy.pdf
      hash: md5
      md5: bbcac226521407ddef2207b9f712e14b
      size: 20460
    - path: plots/ben_accuracy_vs_defence_type.pdf
      hash: md5
      md5: b5ae92989b1a3b3acec8480852c50f71
      size: 31571
    - path: plots/def_param_vs_accuracy.pdf
      hash: md5
      md5: 682f37deca9d281e09453033962b0fd3
      size: 18830
    - path: plots/def_param_vs_adv_accuracy.pdf
      hash: md5
      md5: d0c09b434b7ffa293cedc1cb6f930017
      size: 18406
    - path: plots/def_param_vs_adv_failure_rate.pdf
      hash: md5
      md5: 5b3d11690f3e042bcf8ebb7cee46cf5d
      size: 21120
    - path: plots/trash_score_vs_attack_type.pdf
      hash: md5
      md5: c335b89435a54dd8e44f2bcf70d69778
      size: 45774
    - path: plots/trash_score_vs_defence_type.pdf
      hash: md5
      md5: c675b2180706082261717cbb90d11391
      size: 38452
  afr:
    cmd: python -m deckard.layers.afr  --data_file data/merged.csv  --target adv_failures
      --duration_col adv_fit_time  --config_file afr.yaml --plots_folder plots/
    deps:
    - path: data/merged.csv
      hash: md5
      md5: 5c836e0b9ecaab7e81824684ceb44a9e
      size: 11799827
    params:
      afr.yaml:
        covariates:
        - adv_fit_time
        - accuracy
        - train_time
        - atk_value
        - def_value
        - data.sample.random_state
        - Epochs
        - model_layers
        - id
        - atk_gen
        - def_gen
        - adv_failures
        - adv_accuracy
        - predict_time
        cox:
          plot:
            file: cox_aft.pdf
            title: Cox Model
            qq_title: Cox QQ Plot
          t0: 0.3
          model:
            penalizer: 0.1
          labels:
            data.sample.random_state: Random State
            atk_value: Attack Strength
            train_time: $T_{train}$
            predict_time: $T_{predict}$
            adv_accuracy: Adv. Accuracy
            def_value: Defence Strength
            accuracy: Ben. Accuracy
            model_layers: Layers
            adv_fit_time: $T_{attack}$
            adv_failure_rate: $f_{adv.}(t;\theta)$
            failure_rate: $f_{ben.}(t;\theta)$
            Epochs: No. of Epochs
            model.trainer.batch_size: Batch Size
            def_gen: Defence
        dummies:
          atk_gen: 'Atk:'
          def_gen: 'Def:'
          id: 'Data:'
        exponential:
          plot:
            file: exponential_aft.pdf
            title: Exponential Model
            qq_title: Exponential QQ Plot
          t0: 0.1
          model:
            breakpoints:
            - 0.1
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'def_value: lambda_': Defence Strength
            'model_layers: lambda_': Layers
            'train_time: lambda_': $T_{train}$
            'predict_time: lambda_': $T_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time: lambda_': $T_{attack}$
            'adv_failure_rate: lambda_': $f_{adv.}(t;\theta)$
            'failure_rate: lambda_': $f_{ben.}(t;\theta)$
            'Epochs: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
            ': lambda_': ''
        gamma:
          plot:
            file: gamma_aft.pdf
            title: Generalized Gamma Model
            qq_title: Gamma QQ Plot
          t0: 0.3
          model:
            penalizer: 0.4
          labels:
            'Intercept: alpha_': $\alpha$
            'Intercept: beta_': $\beta$
            'data.sample.random_state: beta_': Random State
            'def_value: beta_': Defence Strength
            'atk_value: beta_': Attack Strength
            'train_time: beta_': $T_{train}$
            'model_layers: beta_': Layers
            'predict_time: beta_': $T_{predict}$
            'adv_accuracy: beta_': Adv. Accuracy
            'accuracy: beta_': Ben. Accuracy
            'adv_fit_time: beta_': $T_{attack}$
            'adv_failure_rate: beta_': $h_{adv.}(t;\theta)$
            'failure_rate: beta_': $h_{ben.}(t;\theta)$
            'Epochs: beta_': No. of Epochs
            'model.trainer.batch_size: beta_': Batch Size
            def_gen: Defence
            'attack.init.eps: beta_': $\varepsilon$
        log_logistic:
          plot:
            file: log_logistic_aft.pdf
            title: Log logistic AFT Model
            qq_title: Log Logistic QQ Plot
          t0: 1
          model:
            penalizer: 0.2
          labels:
            'Intercept: beta_': $\beta$
            'Intercept: alpha_': $\alpha$
            'data.sample.random_state: alpha_': Random State
            'atk_value: alpha_': Attack Strength
            'def_value: alpha_': Defence Strength
            'model_layers: alpha_': Layers
            'train_time: alpha_': $T_{train}$
            'predict_time: alpha_': $T_{predict}$
            'adv_accuracy: alpha_': Adv. Accuracy
            'accuracy: alpha_': Ben. Accuracy
            'adv_fit_time: alpha_': $T_{attack}$
            'adv_failure_rate: alpha_': $h_{adv.}(t;\theta)$
            'failure_rate: alpha_': $h_{ben.}(t;\theta)$
            'Epochs: alpha_': No. of Epochs
            'model.trainer.batch_size: alpha_': Batch Size
            def_gen: Defence
            'attack.init.eps: alpha_': $\varepsilon$
        log_normal:
          plot:
            file: log_normal_aft.pdf
            title: Log Normal AFT Model
            qq_title: Log Normal QQ Plot
          t0: 2
          model:
            penalizer: 0.5
          labels:
            'Intercept: sigma_': $\sigma$
            'Intercept: mu_': $\mu$
            'atk_value: mu_': Attack Strength
            'def_value: mu_': Defence Strength
            'model_layers: mu_': Layers
            'train_time: mu_': $T_{train}$
            'predict_time: mu_': $T_{predict}$
            'adv_accuracy: mu_': Adv. Accuracy
            'accuracy: mu_': Ben. Accuracy
            'adv_fit_time: mu_': $T_{attack}$
            'adv_failure_rate: mu_': $h_{adv.}(t;\theta)$
            'failure_rate: mu_': $h_{ben.}(t;\theta)$
            'Epochs: mu_': No. of Epochs
            'model.trainer.batch_size: mu_': Batch Size
            def_gen: Defence
            'attack.init.eps: mu_': $\varepsilon$
            'data.sample.random_state: mu_': Random State
        weibull:
          plot:
            file: weibull_aft.pdf
            title: Weibull AFT Model
            qq_title: Weibull QQ Plot
          t0: 0.3
          model:
            penalizer: 0.1
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'model_layers: lambda_': Layers
            'train_time: lambda_': $T_{train}$
            'predict_time: lambda_': $T_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time: lambda_': $T_{attack}$
            'adv_failure_rate: lambda_': $f_{adv.}(t;\theta)$
            'failure_rate: lambda_': $f_{ben.}(t;\theta)$
            'Epochs: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
            'def_value: lambda_': Defence Strength
            ': lambda_': ''
    outs:
    - path: plots/aft_comparison.csv
      hash: md5
      md5: 4ab90a269abd14274b57edb26c7f2082
      size: 372
    - path: plots/cox_aft.pdf
      hash: md5
      md5: ca9bd72554721270981570bdbb3426ae
      size: 31097
    - path: plots/cox_aft_dummies.pdf
      hash: md5
      md5: 9394c92b7cf212e1497700444b04f0dc
      size: 29295
    - path: plots/cox_qq.pdf
      hash: md5
      md5: bb6e72d432a3fcdd16ca1f23166d5e89
      size: 19007
    - path: plots/cox_summary.csv
      hash: md5
      md5: 544fe40d1ce51f3095d291cfb70e8b81
      size: 4694
    - path: plots/exponential_aft.pdf
      hash: md5
      md5: b2712700ac15d9cccc463374c7b7ee23
      size: 33310
    - path: plots/exponential_aft_dummies.pdf
      hash: md5
      md5: b494da15c86db9afc35b16fdfae2b568
      size: 32378
    - path: plots/exponential_qq.pdf
      hash: md5
      md5: a1e2f43bba09211b7d5dc2c4f981500a
      size: 21572
    - path: plots/exponential_summary.csv
      hash: md5
      md5: 4edb1e02b2887d2d262484aefae98b78
      size: 8286
    - path: plots/gamma_aft.pdf
      hash: md5
      md5: 58ada2b56af0058190ed369bb6f4bef3
      size: 29634
    - path: plots/gamma_aft_dummies.pdf
      hash: md5
      md5: 89a60c296db73efbb002edf34a79d3ea
      size: 35995
    - path: plots/gamma_qq.pdf
      hash: md5
      md5: 1dfe825b4d620823ddd422620a995345
      size: 20852
    - path: plots/gamma_summary.csv
      hash: md5
      md5: 0a319c32c9e127f303399f68a4387e90
      size: 14646
    - path: plots/log_logistic_aft.pdf
      hash: md5
      md5: e087eeca3bc3b7ce046274a322355c38
      size: 32404
    - path: plots/log_logistic_aft_dummies.pdf
      hash: md5
      md5: 40e8e972c263edf11f65ff4f3e39e2e7
      size: 32184
    - path: plots/log_logistic_qq.pdf
      hash: md5
      md5: 8cd3353baee20567c29e614050126a4b
      size: 19062
    - path: plots/log_logistic_summary.csv
      hash: md5
      md5: ae75911feb1d2d83dbc0a9c5e125420f
      size: 5183
    - path: plots/log_normal_aft.pdf
      hash: md5
      md5: bebe14bd9d432a195b348022cbdf5866
      size: 32576
    - path: plots/log_normal_aft_dummies.pdf
      hash: md5
      md5: 326c6377bf59bbf7db0f1ca5665f60e7
      size: 32560
    - path: plots/log_normal_qq.pdf
      hash: md5
      md5: 0ab3a27f8f682f87bacfbdbed71b0cdd
      size: 21726
    - path: plots/log_normal_summary.csv
      hash: md5
      md5: d48ff310a60a8ad40313cf3b69ab5e58
      size: 5149
    - path: plots/weibull_aft.pdf
      hash: md5
      md5: b7450eef70eda42a9834cd6e5f645ef0
      size: 32607
    - path: plots/weibull_aft_dummies.pdf
      hash: md5
      md5: 72f16b716e904271ab53a0cd38f5bdc8
      size: 31747
    - path: plots/weibull_qq.pdf
      hash: md5
      md5: a67e38069dfc70d4c2f928d74935c750
      size: 18990
    - path: plots/weibull_summary.csv
      hash: md5
      md5: 8ee7e7d66bcf24eb8424460826ab7421
      size: 5217
  copy_results:
    cmd: mkdir -p ~/ml_afr/plots && cp plots/*.pdf ../plots/ && cp plots/*.csv ../plots/
      && cp plots/*.tex ../plots/
